{
  "openapi": "3.0.1",
  "info": {
    "title": "RÄ“hi API V1",
    "version": "v1"
  },
  "paths": {
    "/races": {
      "get": {
        "summary": "List all races",
        "tags": [
          "Races"
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Race"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new race",
        "tags": [
          "Races"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created race",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Race"
                }
              }
            }
          },
          "422": {
            "description": "invalid request"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        }
      }
    },
    "/races/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Race ID",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Show a race",
        "tags": [
          "Races"
        ],
        "responses": {
          "200": {
            "description": "The race",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Race"
                }
              }
            }
          },
          "404": {
            "description": "Race not found"
          }
        }
      },
      "patch": {
        "summary": "Update a race",
        "tags": [
          "Races"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Race was updated"
          },
          "404": {
            "description": "Race not found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": []
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a race",
        "tags": [
          "Races"
        ],
        "responses": {
          "204": {
            "description": "Race was deleted"
          },
          "404": {
            "description": "Race not found"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://{hostname}",
      "variables": {
        "hostname": {
          "default": "localhost:3000"
        }
      }
    }
  ],
  "components": {
    "schemas": {
      "Race": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "lanes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Lane"
            }
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "Lane": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "sort": {
            "type": "integer"
          },
          "competitor": {
            "$ref": "#/components/schemas/Competitor",
            "nullable": true
          }
        },
        "required": [
          "id",
          "name",
          "sort"
        ]
      },
      "Competitor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "position": {
            "type": "integer",
            "nullable": true
          }
        },
        "required": [
          "id",
          "name"
        ]
      }
    }
  }
}