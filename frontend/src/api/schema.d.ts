/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/races": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all races */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description successful */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Race"][];
                    };
                };
            };
        };
        put?: never;
        /** Create a new race */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        race?: components["schemas"]["RaceInput"];
                    };
                };
            };
            responses: {
                /** @description Created race */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Race"];
                    };
                };
                /** @description invalid request */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/races/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Race ID */
                id: string;
            };
            cookie?: never;
        };
        /** Show a race */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Race ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description The race */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Race"];
                    };
                };
                /** @description Race not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        /** Delete a race */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Race ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Race was deleted */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Race not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        /** Update a race */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Race ID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        race?: components["schemas"]["RaceInput"];
                    };
                };
            };
            responses: {
                /** @description Race was updated */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Race not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Race: {
            id: number;
            name: string;
            /** Format: date-time */
            created_at: string;
            /** Format: date-time */
            updated_at: string;
            lanes: components["schemas"]["Lane"][];
        };
        Lane: {
            id: number;
            race_id: number;
            competitor_id?: number | null;
            name: string;
            sort: number;
            /** Format: date-time */
            created_at: string;
            /** Format: date-time */
            updated_at: string;
            competitor?: components["schemas"]["Competitor"];
        };
        Competitor: {
            id: number;
            name: string;
            /** Format: date-time */
            created_at: string;
            /** Format: date-time */
            updated_at: string;
        };
        /** @example {
         *       "name": "Test Race 123",
         *       "lanes": [
         *         {
         *           "name": "A",
         *           "competitor": {
         *             "name": "Bill",
         *             "position": 3
         *           }
         *         },
         *         {
         *           "name": "B",
         *           "competitor": {
         *             "name": "Ted",
         *             "position": 1
         *           }
         *         },
         *         {
         *           "name": "C",
         *           "competitor": {
         *             "name": "Joanna"
         *           }
         *         },
         *         {
         *           "name": "D",
         *           "competitor": {
         *             "name": "Elizabeth",
         *             "position": 2
         *           }
         *         },
         *         {
         *           "name": "E",
         *           "competitor": {
         *             "name": "Rufus"
         *           }
         *         }
         *       ]
         *     } */
        RaceInput: {
            name: string;
            lanes: components["schemas"]["LaneInput"][];
        };
        /** @example {
         *       "lane": {
         *         "name": "A",
         *         "competitor": {
         *           "name": "Bill",
         *           "position": 1
         *         }
         *       }
         *     } */
        LaneInput: {
            name: string;
            competitor?: components["schemas"]["CompetitorInput"];
        };
        /** @example {
         *       "competitor": {
         *         "name": "Bill",
         *         "position": 1
         *       }
         *     } */
        CompetitorInput: {
            name: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
